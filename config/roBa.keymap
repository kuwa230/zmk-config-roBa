#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&none>;
            key-positions = <10 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp Q             &kp W         &kp E             &kp R           &kp T                                 &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&lt 3 A           &kp S         &kp D             &lt 2 F         &kp G     &kp ESCAPE      &kp MINUS   &kp H        &kp J  &kp K      &kp L    &lt 1 ENTER
&kp Z             &kp X         &kp C             &kp V           &kp B     &kp TAB         &kp DELETE  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &mkp MB1  &kp F13         &kp F14     &lt 6 SPACE                             &kp BACKSPACE
            >;
        };

        symbol {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH              &kp DOLLAR             &kp PERCENT                                 &trans  &trans  &trans  &trans  &trans
&kp AMPERSAND    &kp SINGLE_QUOTE   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT_SIGN  &kp LEFT_BRACKET       &trans  &trans  &trans  &trans  &trans  &trans
&kp CARET        &kp TILDE          &kp PIPE              &kp SEMICOLON          &kp COLON    &kp RIGHT_BRACKET      &trans  &trans  &trans  &trans  &trans  &trans
&kp INT_YEN      &sk SLASH          &trans                &trans                 &mkp MB2     &trans                 &trans  &trans                          &trans
            >;
        };

        numbt {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans                             &kp SLASH     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PERIOD
&bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans  &trans  &bt BT_CLR      &kp EQUAL  &kp PLUS      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_0
&trans        &trans        &trans        &trans  &trans  &trans          &trans     &kp MINUS     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans
&trans        &trans        &trans        &trans  &trans  &trans          &trans     &kp ASTERISK                                                     &trans
            >;
        };

        ARROW {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans              &trans          &kp UP_ARROW    &kp MINUS        &kp BACKSPACE
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LG(LEFT_ARROW)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LG(RIGHT_ARROW)
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans              &trans          &trans          &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                               &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        CMDSCROLL {
            bindings = <
&kp LG(Q)      &kp LG(W)             &kp LG(T)              &kp LG(A)             &kp LG(X)                                         &trans  &trans  &trans  &trans  &trans
&mkp MB5       &kp LG(UP_ARROW)      &kp LG(DOWN_ARROW)     &kp LG(C)             &kp LG(V)       &kp LG(LA(V))             &trans  &trans  &trans  &trans  &trans  &trans
&kp LS(LG(C))  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &kp LG(Z)             &kp LG(Y)       &kp LG(LS(Z))             &trans  &trans  &trans  &trans  &trans  &trans
&trans         &trans                &trans                 &kp LG(LS(NUMBER_4))  &kp LG(LS(N5))  &kp LG(LS(NUMBER_3))      &trans  &trans                          &trans
            >;
        };

        CTRL {
            bindings = <
&trans              &kp LC(UP_ARROW)     &trans            &trans             &trans                      &trans  &kp F1  &kp F2   &kp F3   &kp F4
&kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &kp LC(LS(TAB))   &kp LC(TAB)        &trans  &trans      &trans  &trans  &kp F5  &kp F6   &kp F7   &kp F8
&kp LG(M)           &kp LC(LG(F))        &kp LC(PAGE_UP)   &kp LC(PAGE_DOWN)  &trans  &trans      &trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12
&kp LEFT_COMMAND    &kp LEFT_ALT         &kp LEFT_CONTROL  &trans             &trans  &trans      &trans  &trans                            &trans
            >;
        };
    };
};
